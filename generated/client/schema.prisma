// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["deno"]
  output          = "../generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Estudiantes {
  pk_id_est     String @id @default(uuid())
  txt_user_est  String @unique
  txt_email_est String @unique
  txt_pass_est  String @db.VarChar(255)
  num_sub_est   Int    @default(1)

  Cambios        Cambios[]
  Grupos         Grupos[]
  GrupoConAcceso GrupoConAcceso[]
  Carpetas       Carpetas[]
  Bibliografias  Bibliografias[]
}

enum TipoPublicacion {
  SitioWeb
  Libro
  ArticuloRevista
  ArticuloPeriodica
  Peliculas
  Varios
}

enum TipoFormato {
  Apa
  Chicago
  Mla
  Ieee
}

model Bibliografias {
  pk_id_biblio         Int             @id @default(autoincrement())
  txt_tip_biblio       TipoPublicacion // Tipo de publicacion
  num_fmt_biblio       TipoFormato // Formato de referencia
  txt_tit_biblio       String // Titulo
  txt_aut_biblio       String // Autores
  txt_pag_biblio       String? // Nombre de pagina
  txt_dir_biblio       String? // Se refiere a URL
  txt_fecha_pub_biblio Int // Fecha de publicacion
  txt_fecha_acc_biblio DateTime? // Fecha de acceso
  txt_edit_biblio      String?
  num_edic_biblio      Int?
  num_volm_biblio      Int?
  num_npag_biblio      Int?
  txt_ubic_biblio      String?

  Grupo      Grupos @relation(fields: [fk_id_grup], references: [pk_id_grup], onDelete: Cascade, onUpdate: Cascade)
  fk_id_grup Int

  Carpeta    Carpetas @relation(fields: [fk_id_carp], references: [pk_id_carp], onDelete: Cascade, onUpdate: Cascade)
  fk_id_carp Int

  Estudiante Estudiantes @relation(fields: [fk_id_est], references: [pk_id_est], onDelete: Cascade, onUpdate: Cascade)
  fk_id_est  String // TODO: AGREGAR EN DICCIONARIO

  Archivos Archivos[]
}

model Archivos {
  pk_id_arch   Int    @id @default(autoincrement())
  txt_dir_arch String // Se refiere a URL

  Bibliografias Bibliografias @relation(fields: [fk_id_biblio], references: [pk_id_biblio], onDelete: Cascade, onUpdate: Cascade)
  fk_id_biblio  Int // TODO: AGREGAR DICCIONARIO
}

model Carpetas {
  pk_id_carp   Int    @id @default(autoincrement())
  txt_nom_carp String

  Grupo      Grupos @relation(fields: [fk_id_grup], references: [pk_id_grup], onDelete: Cascade, onUpdate: Cascade)
  fk_id_grup Int // TODO: AGREGAR EN DICCIONARIO

  Estudiante Estudiantes @relation(fields: [fk_id_est], references: [pk_id_est], onDelete: Cascade, onUpdate: Cascade)
  fk_id_est  String // TODO: AGREGAR EN DICCIONARIO

  Cambios       Cambios[]
  Bibliografias Bibliografias[]
}

model GrupoConAcceso {
  Grupo      Grupos @relation(fields: [fk_id_grup], references: [pk_id_grup], onDelete: Cascade, onUpdate: Cascade)
  fk_id_grup Int

  Estudiante Estudiantes @relation(fields: [fk_id_est], references: [pk_id_est], onDelete: Cascade, onUpdate: Cascade)
  fk_id_est  String

  @@id([fk_id_grup, fk_id_est])
}

model Grupos {
  pk_id_grup   Int    @id @default(autoincrement())
  txt_nom_grup String

  Estudiante Estudiantes @relation(fields: [fk_id_est], references: [pk_id_est], onDelete: Cascade, onUpdate: Cascade)
  fk_id_est  String

  Cambios        Cambios[]
  Carpetas       Carpetas[]
  Bibliografias  Bibliografias[]
  GrupoConAcceso GrupoConAcceso[]
}

model Cambios {
  pk_id_camb     Int      @id @default(autoincrement())
  num_tip_camb   Int      @db.SmallInt
  txt_fecha_camb DateTime

  Estudiante Estudiantes @relation(fields: [fk_id_est], references: [pk_id_est], onDelete: Cascade, onUpdate: Cascade)
  fk_id_est  String

  Carpeta    Carpetas @relation(fields: [fk_id_carp], references: [pk_id_carp], onDelete: Cascade, onUpdate: Cascade)
  fk_id_carp Int

  Grupo      Grupos @relation(fields: [fk_id_grup], references: [pk_id_grup], onDelete: Cascade, onUpdate: Cascade)
  fk_id_grup Int
}
